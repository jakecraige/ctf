import requests
import base64
import hashlib
from hashpumpy import hashpump

URL = "http://crypto.chal.csaw.io:5003"

def exploit():
    # Create the note to get the initial hash
    data = {'author': 'tpurp', 'note': 'note'}
    res = requests.post(URL+"/new", data=data)
    id_b64, integrity = res.text[19:-1].split(':')
    id_txt = base64.b64decode(id_b64).decode()
    print("Created note")
    print("\tID: {}".format(id_txt))
    print("\tHash: {}".format(integrity))

    # The initial exploit looped to brute force secret length with a for loop.
    # Just hard code it for the writeup.
    sec_len = 13
    id_suffix = b"&admin=True&access_sensitive=True&entrynum=7"
    (forgedHsh, id_txt_ext) = hashpump(integrity, id_txt, id_suffix, sec_len)
    print("Forged hash")
    print("\tID: {}".format(id_txt_ext))
    print("\tHash: {}".format(forgedHsh))

    # We have to escape the unicode chars because python3 will fail by default
    # when decoding since it deafults to utf-8.
    escaped = bytes(id_txt_ext.decode('unicode_escape'), 'unicode_escape')
    data = {'id': base64.b64encode(escaped).decode(), 'integrity': forgedHsh}
    res = requests.post(URL+"/view", data=data)
    print(res.text)

exploit()
